# !/usr/bin/env python
# encoding: utf-8
__author__ = 'Administrator'
#Python语言中字符串的格式化方法。Python提供两种字符串格式方法。
# 一种类似C语言的格式化方法，使用；
# 另一种采用format()方法，Python推荐使用这种方法。此法能力更强、更直观、更容易格式化组合数据类型。

#format()方法格式化字符串类型，基本使用格式：
#<模板字符串>.format(<逗号分隔的参数>)
#<模板字符串>由一系列的槽组成，用来控制修改字符串中嵌入值出现的位置，其基本思想是将format()方法的<逗号分隔的参数>中的参数按照序号关系替换到<模板字符串>的槽中。
#槽用大括号（{}）表示，如果大括号中没有序号，则按照出现顺序替换。
strFormat="{}:计算机{}的CPU占用率为：{}%。".format("2018-02-10","Python",10)
print("格式化结果为：",strFormat) #格式化结果为： 2018-02-10:计算机Python的CPU占用率为：10%。

#format()方法可以非常方便地连接不同类型的变量或内容，如果需要输出大括号，采用{{来表示{，采用}}来表示}，例如：

yuanzhoulv1="{}{}{}".format("圆周率是",3.1415926,"...")
print("输出圆周率1：",yuanzhoulv1) #输出圆周率1： 圆周率是3.1415926...

yuanzhoulv2="圆周率{{{1}{2}}}是{0}".format("无理数",3.1415926,"...")
print("输出圆周率2",yuanzhoulv2)#输出圆周率2 圆周率{3.1415926...}是无理数

s="圆周率{{{1}{2}}}是{0}"  # {}大括号本身是字符串的一部分
print("字符串本身为：",s) #字符串本身为： 圆周率{{{1}{2}}}是{0}
sf=s.format("无理数",3.1415926,"...") #当调用format()时解析大括号
print("格式化后为：",sf) #格式化后为： 圆周率{3.1415926...}是无理数

